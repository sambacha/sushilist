{"version":3,"file":"sushiswap-token-list.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/constants.ts","../src/git.ts","../src/parser.ts","../src/parse/parse-ethereum-lists.ts","../src/parse/chef-overrides.ts","../src/parse/parse-contract-map.ts","../src/parse/svg-icons.ts","../src/utils.ts","../src/parse/token-lists.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { resolve } from 'path';\nimport { tmpdir } from 'os';\nimport * as z from 'zod';\n\nexport const CONTRACT_MAP_REPO = 'metamask/contract-metadata';\nexport const CONTRACT_MAP_OUTPUT_PATH = resolve(tmpdir(), 'contract-metadata');\n\nexport const ETHEREUM_LISTS_REPO = 'ethereum-lists/tokens/tokens/eth';\nexport const ETHEREUM_LISTS_OUTPUT_PATH = resolve(tmpdir(), 'ethereum-lists/tokens');\n\n/**\n * @todo add semver or hash of the fetched JSON object\n */\n\nexport const TokenListItemSchema = z\n  .string()\n  .url()\n  .nonempty();\nexport type TokenListItem = z.infer<typeof TokenListItemSchema>;\nexport const TokenListTypeSchema = z.record(TokenListItemSchema);\nexport type TokenListType = z.infer<typeof TokenListTypeSchema>;\n\n/**\n *  @constant {TokenList} TOKEN_LISTS\n *  @description defines external token lists to aggregate\n *  @note there is no versioning in these semantics\n */\nexport const TOKEN_LISTS: TokenListType = {\n  coingecko: 'https://tokens.coingecko.com/uniswap/all.json',\n};\n\nexport const TokenListEnumSchema = z.enum(['coingecko']);\nexport type TokenListEnum = z.infer<typeof TokenListEnumSchema>;\n\n/**\n * @exports SSocialSchema\n * @description social media profile links\n */\n\nexport const SocialSchema = z.object({\n  blog: z.string().optional(),\n  chat: z.string().optional(),\n  discord: z.string().optional(),\n  facebook: z.string().optional(),\n  forum: z.string().optional(),\n  github: z.string().optional(),\n  gitter: z.string().optional(),\n  instagram: z.string().optional(),\n  linkedin: z.string().optional(),\n  medium: z.string().optional(),\n  reddit: z.string().optional(),\n  slack: z.string().optional(),\n  telegram: z.string().optional(),\n  twitter: z.string().optional(),\n  youtube: z.string().optional(),\n});\n\nexport const TokenDeprecationSchema = z.object({\n  new_address: z.string().optional(),\n});\n\nexport const TokenExtensionsSchema = z.object({\n  color: z.string().optional(),\n  isChefCurated: z.boolean().optional(),\n  isVerified: z.boolean().optional(),\n  shadowColor: z.string().optional(),\n});\nexport type TokenExtensionsType = z.infer<typeof TokenExtensionsSchema>;\n\n/**\n * @exports TokenSchema\n *  @summary token schema that is used to parse the JSON files.\n */\n\nexport const TokenSchema = z.object({\n  address: z.string().regex(/^0x[a-fA-F0-9]{40}$/),\n  chainId: z.number().optional(),\n  decimals: z.number().min(0),\n  deprecation: TokenDeprecationSchema.optional(),\n  extensions: TokenExtensionsSchema.optional(),\n  name: z.string(),\n  social: SocialSchema.optional(),\n  symbol: z.string(),\n  website: z.string().optional(),\n});\n\n/**\n * @exports RawContractMapTokenSchema\n * @summary token data that is loaded from the JSON files.\n */\nexport const RawContractMapTokenSchema = z.object({\n  address: z.string(),\n  decimals: z.union([z.string(), z.number()]),\n  name: z.string(),\n  symbol: z.string(),\n});\n\n/**\n *  @exports RawEthereumListsTokenSchema\n *  @summary token data that is loaded from the JSON files.\n *  These are generally Optional fields\n */\nexport const RawEthereumListsTokenSchema = z.object({\n  address: z.string().optional(),\n  decimals: z.union([z.string(), z.number()]).optional(),\n  deprecation: TokenDeprecationSchema.optional(),\n  name: z.string().optional(),\n  social: SocialSchema.optional(),\n  symbol: z.string().optional(),\n  website: z.string().optional(),\n});\n\n/**\n * @export z.infer extract the TypeScript type of the exported schemas\n */\nexport type RawContractMapToken = z.infer<typeof RawContractMapTokenSchema>;\nexport type RawEthereumListsToken = z.infer<typeof RawEthereumListsTokenSchema>;\nexport type Token = z.infer<typeof TokenSchema>;\nexport type TokenSocialMetadata = z.infer<typeof SocialSchema>;\n","import degit from 'degit';\n\n/**\n * Fetch a Git repository and return the file system path of the folder containing the repository.\n *\n * @return {Promise<void>}\n */\nexport const fetchRepository = async (repoUrl: string, outputPath: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    const emitter = degit(repoUrl, {\n      // caching can cause problems and should stay disabled.\n      cache: false,\n      // forcibly overwrite any existing files in the directory\n      force: true,\n    });\n\n    return emitter\n      .clone(outputPath)\n      .then(resolve)\n      .catch((error) => {\n        reject();\n        throw new Error(`Failed to fetch repo ${repoUrl}: ${error.message || error}`);\n      });\n  });\n};\n","import { promises as fs } from 'fs';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isString from 'lodash/isString';\nimport mapValues from 'lodash/mapValues';\nimport pick from 'lodash/pick';\nimport mkdirp from 'mkdirp';\nimport { resolve } from 'path';\nimport {\n  RawEthereumListsToken,\n  RawEthereumListsTokenSchema,\n  SocialSchema,\n  Token,\n  TokenSchema,\n  TokenDeprecationSchema,\n} from './constants';\n\n/**\n * Reads and parses a JSON file. Throws an error if the file could not be read or if the JSON is invalid.\n *\n * @param {string} file\n * @return {Promise<T>}\n * @template T\n */\nexport const parseJsonFile = async <T>(file: string): Promise<T> => {\n  try {\n    const json = await fs.readFile(file, 'utf8');\n    return JSON.parse(json);\n  } catch (error) {\n    throw new Error(`Failed to parse file ${file}: ${error.message}`);\n  }\n};\n\n/**\n * Validate raw token data, by checking if the required values are set and if the decimals are larger than or equal to\n * zero. This will strip any unknown fields and rename the 'decimals' field to 'decimal' for compatibility.\n *\n * @param {RawEthereumListsToken} token\n * @return {boolean}\n */\nexport const validateTokenData = (token: RawEthereumListsToken): Token => {\n  const normalizedTokenData = {\n    ...pick(token, Object.keys(RawEthereumListsTokenSchema.shape)),\n    deprecation: pick(token.deprecation, Object.keys(TokenDeprecationSchema.shape)),\n    social: pick(token.social, Object.keys(SocialSchema.shape)),\n  };\n\n  const validToken = TokenSchema.parse(normalizedTokenData);\n  const validSocial = SocialSchema.parse(normalizedTokenData.social);\n\n  return {\n    ...validToken,\n    social: validSocial,\n  } as Token;\n};\n\n/**\n * Sort erc-tokens alphabetically by symbol.\n *\n * @param {Token[]} tokens\n * @return {Token[]}\n */\nexport const sortTokens = (tokens: Token[]): Token[] => {\n  return tokens.sort((a, b) => a.symbol.localeCompare(b.symbol));\n};\n\n/**\n * Creates the output folder if it does not exist yet.\n *\n * @param {string} path\n * @return {Promise<void>}\n */\nexport const createOutputFolder = async (path: string): Promise<void> => {\n  try {\n    await fs.access(path);\n  } catch (error) {\n    if (error.code !== 'ENOENT') {\n      throw new Error(`Failed to create output folder: ${error.message}`);\n    }\n\n    mkdirp.sync(path);\n  }\n};\n\nfunction mapValuesDeep(v: any, callback: any): any {\n  return isPlainObject(v) ? mapValues(v, (v) => mapValuesDeep(v, callback)) : callback(v);\n}\n\n/**\n * Recursively loop through an token's values and `trim()` any values which are strings.\n *\n * @param {Token} token\n * @return {Token}\n */\nexport const deeplyTrimAllTokenStrings = (token: Token): Token => {\n  return mapValuesDeep(token, (v: any) => (isString(v) ? v.trim() : v));\n};\n\n/**\n * Write the  ERC List JSON file to disk.\n *\n * @param {Token[]} tokens\n * @param {string} path\n * @param {string} name\n * @return {Promise<void>}\n */\nexport const writeToDisk = async (tokens: any, path: string, name: string): Promise<void> => {\n  await createOutputFolder(path);\n  const json = JSON.stringify(tokens, null, 2);\n  return fs.writeFile(resolve(path, name), json, 'utf8');\n};\n","// @ethereum-lists\n// @summary provides and exports external lists\nimport { promises as fs } from 'fs';\nimport filter from 'lodash/filter';\nimport matchesProperty from 'lodash/matchesProperty';\nimport partition from 'lodash/partition';\nimport { resolve } from 'path';\nimport {\n  ETHEREUM_LISTS_OUTPUT_PATH,\n  ETHEREUM_LISTS_REPO,\n  RawEthereumListsToken,\n  Token,\n} from '../constants';\nimport { fetchRepository } from '../git';\nimport { parseJsonFile, validateTokenData } from '../parser';\n\n/**\n * Partition tokens array into two categories: unique vs duplicates, according to their token symbol\n * @param {Token[]} tokens\n * @return {Token[][]}\n */\nexport const partitionByUniqueness = (tokens: Token[]): Token[][] => {\n  const [uniqueTokens, duplicateTokens] = partition(tokens, (token) => {\n    const dups = filter(tokens, ['symbol', token.symbol]);\n    return dups.length === 1;\n  });\n  return [uniqueTokens, duplicateTokens];\n};\n\n/**\n * Finds deprecated tokens and replaces them with the data\n * for the latest version of the token\n *\n * @param {Token[]} tokens\n *\n * @return {Token[]}\n */\nexport function resolveDeprecations(tokens: Token[]): Token[] {\n  return tokens.map(({ deprecation, ...token }: Token) => {\n    return !deprecation?.new_address\n      ? token\n      : tokens.find(matchesProperty('address', deprecation.new_address)) || token;\n  });\n}\n\n/**\n * Load the token JSON files from directory, and then validate them\n * against our token schema\n *\n * @return {Token[]}\n */\nexport async function parseEthereumListsTokenFiles(): Promise<Token[]> {\n  const files = await fs.readdir(ETHEREUM_LISTS_OUTPUT_PATH);\n\n  return files.reduce<Promise<Token[]>>(async (tokens, file) => {\n    const jsonFile = resolve(ETHEREUM_LISTS_OUTPUT_PATH, file);\n    const tokenData = await parseJsonFile<RawEthereumListsToken>(jsonFile);\n    const token = validateTokenData(tokenData);\n\n    return Promise.resolve([...(await tokens), token]);\n  }, Promise.resolve([]));\n}\n\n/**\n * Fetch the latest commit from `ethereum-lists/tokens` repo and parse\n * the saved JSON files\n *\n * @return {Token[][]}\n */\nexport default async function parseEthereumLists(): Promise<Token[][]> {\n  await fetchRepository(ETHEREUM_LISTS_REPO, ETHEREUM_LISTS_OUTPUT_PATH);\n  return parseEthereumListsTokenFiles()\n    .then(resolveDeprecations)\n    .then(partitionByUniqueness);\n}\n","import { getAddress } from '@ethersproject/address';\nimport mapKeys from 'lodash/mapKeys';\nimport { resolve } from 'path';\nimport { parseJsonFile } from '../parser';\n\nexport type OverrideToken = {\n  color?: string;\n  isCurated?: boolean;\n  name?: string;\n  symbol?: string;\n  shadowColor?: string;\n};\n\ntype OverrideFile = { [address: string]: OverrideToken };\n\nexport default async function parseOverrideFile(): Promise<OverrideFile> {\n  // load svg manifest JSON file from directory\n  const jsonFile = resolve(process.cwd(), 'chef.json');\n  return parseJsonFile<OverrideFile>(jsonFile).then((override) => {\n    return mapKeys(override, (...args) => {\n      if (args[1] === 'ETH') return args[1];\n      return getAddress(args[1]);\n    });\n  });\n}\n","import isEmpty from 'lodash/isEmpty';\nimport pick from 'lodash/pick';\nimport { resolve } from 'path';\nimport {\n  CONTRACT_MAP_REPO,\n  CONTRACT_MAP_OUTPUT_PATH,\n  RawContractMapToken,\n  RawContractMapTokenSchema,\n  Token,\n} from '../constants';\nimport { fetchRepository } from '../git';\nimport { parseJsonFile, validateTokenData } from '../parser';\n\n// the JSON file exported by `eth-contract-metadata` is keyed by token contract address\ntype RawContractMap = { [address: string]: RawContractMapToken };\n\nexport default async function parseContractMap(): Promise<Token[]> {\n  // fetch the latest commit from `eth-contract-metadata` repo and save it to disk\n  await fetchRepository(CONTRACT_MAP_REPO, CONTRACT_MAP_OUTPUT_PATH);\n\n  // load contract map JSON file from directory\n  const jsonFile = resolve(CONTRACT_MAP_OUTPUT_PATH, 'contract-map.json');\n  const contractMap = await parseJsonFile<RawContractMap>(jsonFile);\n\n  return (\n    Object.keys(contractMap)\n      .map(\n        (address: string): RawContractMapToken => ({\n          ...contractMap[address],\n          address,\n        })\n      )\n      // remove any unknown/undesirable keys from each token object.\n      .map((token) => pick(token, Object.keys(RawContractMapTokenSchema.shape)))\n      // remove any tokens from the array if they contain null values for the\n      // keys that we care about.\n      .filter((token) => Object.values(token).some(isEmpty))\n      .map(validateTokenData)\n  );\n}\n","import { promises as fs } from 'fs';\nimport getSVGColors from 'get-svg-colors';\nimport compact from 'lodash/compact';\nimport unionBy from 'lodash/unionBy';\nimport { tmpdir } from 'os';\nimport { resolve } from 'path';\nimport { fetchRepository } from '../git';\nimport { parseJsonFile } from '../parser';\n\nexport type SvgToken = { color: string; name?: string; symbol: string };\n\nconst SVG_ORIGINALS_REPO = 'spothq/cryptocurrency-icons';\nconst SVG_ORIGINALS_OUTPUT_PATH = resolve(tmpdir(), SVG_ORIGINALS_REPO);\n\nconst SVG_OVERRIDES_REPO = 'mikedemarais/react-coin-icon/assets/overrides';\nconst SVG_OVERRIDES_OUTPUT_PATH = resolve(tmpdir(), SVG_OVERRIDES_REPO);\n\nasync function parseOriginalSVGIcons() {\n  // fetch the latest commit from `spothq/cryptocurrency-icons` repo and save it to disk\n  await fetchRepository(SVG_ORIGINALS_REPO, SVG_ORIGINALS_OUTPUT_PATH);\n  // load svg manifest JSON file from directory\n  const jsonFile = resolve(SVG_ORIGINALS_OUTPUT_PATH, 'manifest.json');\n  return parseJsonFile<SvgToken[]>(jsonFile);\n}\n\nasync function parseOverrideSVGIcons() {\n  // fetch the latest commit from `mikedemarais/react-coin-icons` repo and save it to disk\n  await fetchRepository(SVG_OVERRIDES_REPO, SVG_OVERRIDES_OUTPUT_PATH);\n  const files = await fs.readdir(SVG_OVERRIDES_OUTPUT_PATH);\n\n  return files.reduce<Promise<any[]>>(async (svgTokens, file) => {\n    const svgPath = resolve(SVG_OVERRIDES_OUTPUT_PATH, file);\n    const svg = await fs.readFile(svgPath, 'utf8');\n\n    // Attempt to get SVG's \"color\" by reading it's first \"fill\"\n    // value (which is usually the icon's background).\n    const fillColor = getSVGColors(svg).fills[0];\n\n    let svgToken = undefined;\n    if (fillColor) {\n      svgToken = {\n        symbol: file.split('.')[0].toUpperCase(),\n        //  color: makeColorMoreChill(fillColor.hex().toLowerCase()),\n      };\n    } else {\n      console.error(`Unable to adjust Chef's derived colorsfrom the: \\`${file}\\``);\n    }\n\n    return Promise.resolve(compact([...(await svgTokens), svgToken]));\n  }, Promise.resolve([]));\n}\n\nexport default async function parseSVGIconTokenFiles(): Promise<SvgToken[]> {\n  const originals = await parseOriginalSVGIcons();\n  const overrides = await parseOverrideSVGIcons();\n\n  return unionBy(originals, overrides, 'symbol');\n}\n","export function reduceArrayToObject(array: any[]) {\n  return array.reduce((item, culm) => Object.assign(culm, item), {});\n}\n","import fetch from 'node-fetch';\nimport * as z from 'zod';\nimport { TOKEN_LISTS, TokenListEnum, TokenListEnumSchema } from '../constants';\nimport { reduceArrayToObject } from '../utils';\n\nexport const TokenListStore = z.object({\n  tags: z\n    .any()\n    .array()\n    .optional(),\n  tokens: z\n    .any()\n    .array()\n    .optional(),\n});\nexport type TokenListStoreType = z.infer<typeof TokenListStore>;\nexport const TokenListStoreRecord = z.record(TokenListStore);\nexport type TokenListStoreRecordType = z.infer<typeof TokenListStoreRecord>;\n\n/** \n\nTODO\n\nconst omitTokenWithTag = (tokens: any[], tag: string) =>\n  tokens.filter(({ tags = [] }: TokenListStoreType) => !tags.includes(tag));\n\nconst pickTokenWithTag = (tokens: any[], tag: string) =>\n  tokens.filter(({ tags = [] }: TokenListStoreType) => tags.includes(tag));\n\n  */\n// const { aave, sushibar } = TokenListEnumSchema.enum;\n\nexport default async function parseTokenLists() {\n  const listsArray = await Promise.all(\n    TokenListEnumSchema.options.map(\n      async (list: TokenListEnum): Promise<TokenListStoreRecordType> => {\n        return new Promise(async (resolve, reject) =>\n          // fetch the TokenList from remote uri\n          fetch(TOKEN_LISTS[list])\n            .then(res => res.json())\n            .then(({ tags, tokens }) => resolve({ [list]: { tags, tokens } }))\n            .catch(reject)\n        );\n      }\n    )\n  );\n\n  return reduceArrayToObject(\n    listsArray.map((list: any) => {\n //     const listName = Object.keys(list)[0];\n      const newList = { ...list };\n/** \n \nTODO\n\n      if (listName === sushibar) {\n        newList[sushibar].tokens = omitTokenWithTag(newList[sushibar].tokens, 'bases');\n      }\n\n      if (listName === onsen) {\n        newList[onsen].tokens = [\n          ...pickTokenWithTag(newList[onsen].tokens, '*'),\n          ...pickTokenWithTag(newList[onsen].tokens, '*'),\n        ];\n      }\n      \n*/\n\n      return newList;\n    })\n  );\n}\n","#!/usr/bin/env node\n\n/**\n * @title SushiSwap Generated Tokenlist\n * @description Generateds Tokenlist, and lists for Onsen and SushiBar\n * @version v0.1.0\n * @license \"COPYRIGHT 2021 SUSHISWAP CONTRIBUTORS\"\n */\n\nimport { getAddress } from '@ethersproject/address';\nimport compact from 'lodash/compact';\nimport filter from 'lodash/filter';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nimport matchesProperty from 'lodash/matchesProperty';\nimport merge from 'lodash/merge';\nimport pick from 'lodash/pick';\nimport some from 'lodash/some';\nimport uniq from 'lodash/uniq';\nimport { resolve } from 'path';\nimport { Token, TokenExtensionsType, TokenListEnumSchema } from './constants';\nimport parseEthereumLists from './parse/parse-ethereum-lists';\nimport parseOverrideFile from './parse/chef-overrides';\nimport parseContractMap from './parse/parse-contract-map';\nimport parseSVGIconTokenFiles from './parse/svg-icons';\nimport parseTokenLists from './parse/token-lists';\nimport { deeplyTrimAllTokenStrings, sortTokens, writeToDisk } from './parser';\n\nimport * as Types from './constants';\nexport { Types };\n\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '1';\n\nconsole.log(' 🍣 rolling up the token list ');\n\nfunction normalizeList(list: any[]) {\n  return keyBy(list, ({ address }) => getAddress(address));\n}\n\n// Entry point\n(async function() {\n  const contractMapTokens = await parseContractMap();\n  const [uniqueEthereumListTokens, duplicateEthereumListTokens] = await parseEthereumLists();\n  const sushiswapOverrides = await parseOverrideFile();\n  const svgIcons = await parseSVGIconTokenFiles();\n  const tokenListTokens: any = await parseTokenLists();\n  const { coingecko, ...preferredTokenLists } = tokenListTokens;\n\n  const sources = {\n    default: [\n      duplicateEthereumListTokens,\n      uniqueEthereumListTokens,\n      contractMapTokens,\n      coingecko.tokens.flat(),\n    ].map(normalizeList),\n    preferred: [\n      Object.values(preferredTokenLists)\n        .map(({ tokens }: any) => tokens)\n        .flat(),\n    ].map(normalizeList),\n  };\n\n  const defaultSources: any = merge({}, ...sources.default);\n  const allKnownTokenAddresses: any = uniq(\n    compact([\n      ...sources.default.map(Object.keys).flat(),\n      ...sources.preferred.map(Object.keys).flat(),\n    ]).map(getAddress)\n  );\n\n  function resolveTokenInfo(tokenAddress: string) {\n    function matchToken({ address }: Token): boolean {\n      return getAddress(address) === getAddress(tokenAddress);\n    }\n\n    const lists = pick(\n      tokenListTokens,\n      Object.keys(tokenListTokens).filter((list: any) =>\n        some(tokenListTokens[list].tokens, matchToken)\n      )\n    );\n\n    if (Object.keys(lists).length === 1) {\n      return find(lists[Object.keys(lists)[0]].tokens, matchToken);\n    } else if (Object.keys(lists).length > 1) {\n      const listNames = Object.keys(lists);\n      if (listNames.includes(TokenListEnumSchema.enum.coingecko)) {\n        return find(lists.coingecko.tokens, matchToken);\n      }\n    }\n\n    return defaultSources[tokenAddress];\n  }\n\n  function buildTokenList() {\n    return allKnownTokenAddresses.map((tokenAddress: string) => {\n      const token = resolveTokenInfo(tokenAddress);\n      const overrideToken = sushiswapOverrides[tokenAddress];\n\n      let { chainId = 1, color, decimals, name, shadowColor, symbol } = token;\n\n      const isSushiBar = sources.preferred\n        .map(Object.keys)\n        .flat()\n        .includes(tokenAddress);\n\n      if (isSushiBar) {\n        const logoData = svgIcons.find((item) => item.symbol === symbol);\n        color = logoData?.color;\n      }\n\n      /**\n       * @extends TokenExtensionsType\n       */\n\n      const extensions: TokenExtensionsType = {\n        color: overrideToken?.color || color,\n        isChefCurated: overrideToken?.isCurated ? true : undefined,\n        isVerified: isSushiBar || overrideToken?.isCurated ? true : undefined,\n        shadowColor: overrideToken?.shadowColor || shadowColor,\n      };\n\n      return deeplyTrimAllTokenStrings({\n        address: tokenAddress,\n        chainId,\n        decimals,\n        name: overrideToken?.name || name,\n        symbol: overrideToken?.symbol || symbol,\n        ...(compact(Object.values(extensions)).length ? { extensions } : undefined),\n      });\n    });\n  }\n\n  const tokens = await sortTokens(buildTokenList());\n  await writeToDisk(\n    {\n      name: 'SushiSwap Menu List',\n      timestamp: new Date().toISOString(),\n      logoURI: 'https://avatars.githubusercontent.com/u/72222929?s=200&v=4',\n      version: {\n        major: 1,\n        minor: 2,\n        patch: 1,\n      },\n      keywords: ['sushiswap'],\n      tokens,\n    },\n    resolve(process.cwd(), './output'),\n    'sushiswap-token-list.json'\n  );\n\n  console.log(\n    '# of \"isCuratedActive\" tokens: ',\n    filter(tokens, matchesProperty('extensions.isCuratedActive', true)).length\n  );\n  console.log(\n    '# of \"isSushiBar\" tokens: ',\n    filter(tokens, matchesProperty('extensions.isSushiBar', true)).length\n  );\n})();\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","CONTRACT_MAP_OUTPUT_PATH","tmpdir","ETHEREUM_LISTS_OUTPUT_PATH","TokenListItemSchema","z","url","nonempty","TokenListTypeSchema","TOKEN_LISTS","coingecko","TokenListEnumSchema","SocialSchema","blog","optional","chat","discord","facebook","forum","github","gitter","instagram","linkedin","medium","reddit","slack","telegram","twitter","youtube","TokenDeprecationSchema","new_address","TokenExtensionsSchema","color","isChefCurated","isVerified","shadowColor","TokenSchema","address","regex","chainId","decimals","min","deprecation","extensions","social","symbol","website","RawContractMapTokenSchema","RawEthereumListsTokenSchema","fetchRepository","repoUrl","outputPath","degit","cache","force","clone","message","parseJsonFile","file","fs","readFile","JSON","parse","_context","validateTokenData","token","normalizedTokenData","pick","shape","sortTokens","tokens","sort","a","b","localeCompare","createOutputFolder","path","access","_context2","code","mkdirp","sync","deeplyTrimAllTokenStrings","mapValuesDeep","v","callback","isPlainObject","mapValues","isString","trim","writeToDisk","json","stringify","writeFile","partitionByUniqueness","partition","filter","resolveDeprecations","map","find","matchesProperty","parseEthereumListsTokenFiles","readdir","reduce","jsonFile","parseEthereumLists","parseOverrideFile","process","cwd","override","mapKeys","getAddress","parseContractMap","contractMap","some","isEmpty","SVG_ORIGINALS_OUTPUT_PATH","SVG_OVERRIDES_REPO","SVG_OVERRIDES_OUTPUT_PATH","parseOriginalSVGIcons","parseOverrideSVGIcons","svgTokens","svgPath","fillColor","getSVGColors","fills","svgToken","split","toUpperCase","console","compact","parseSVGIconTokenFiles","originals","unionBy","reduceArrayToObject","array","item","culm","assign","parseTokenLists","all","options","list","fetch","res","tags","normalizeList","keyBy","env","NODE_TLS_REJECT_UNAUTHORIZED","log","_asyncToGenerator","resolveTokenInfo","buildTokenList","allKnownTokenAddresses","tokenAddress","overrideToken","sushiswapOverrides","isSushiBar","sources","preferred","flat","includes","logoData","svgIcons","isCurated","matchToken","lists","tokenListTokens","defaultSources","contractMapTokens","uniqueEthereumListTokens","duplicateEthereumListTokens","preferredTokenLists","merge","uniq","timestamp","Date","toISOString","logoURI","version","major","minor","patch","keywords"],"mappings":"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"}